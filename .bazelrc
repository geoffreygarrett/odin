# .bazelrc

# These options are effective in all Bazel commands executed in this workspace.

# These options are effective in all Bazel commands executed in this workspace.
common --enable_platform_specific_config
#common --experimental_enable_bzlmod
build --incompatible_enable_cc_toolchain_resolution
# The above option results in --config=linux,macos, or --config=windows automatically.

# Set the C++ language version to C++20 for GCC/Clang.
build --cxxopt=-std=c++20

# Specifies the number of concurrent jobs that Bazel will try to execute.
build --jobs=20

# Building with optimization and verbose on failures.
build -c opt # --verbose_failures
build --@rules_cuda//cuda:enable
build --@rules_cuda//cuda:compiler=nvcc

# Set test output to be streamed directly to the console.
test --test_output=all
test --test_summary=detailed

# Disable thrust defines (if necessary)
# build --@com_github_nvidia_thrust//:enable_thrust_defines=False
# Change thrust_host_system to TBB
build --@com_github_nvidia_thrust//:thrust_host_system=TBB
# Change thrust_device_system to CUDA
build --@com_github_nvidia_thrust//:thrust_device_system=CUDA
#build --action_env=gcc=gcc-11

#build --action_env=CUDA_PATH=/home/geoffrey/mambaforge-pypy3/envs/gtoc12/
build --action_env=CUDA_PATH=/home/geoffrey/mambaforge-pypy3/envs/cudaa
#build --action_env=LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/geoffrey/miniconda3/envs/gpu1/lib
#build --action_env=CUDA_PATH=/usr/local/cuda
build --action_env=LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/geoffrey/mambaforge-pypy3/envs/cudaa/lib
run --action_env=LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/geoffrey/mambaforge-pypy3/envs/cudaa/lib
#bazel build --config gcc -c -opt --cuda_archs=sm_61

#--test_output=<summary, errors, all or streamed> default: "summary"
#Specifies desired output mode. Valid values are 'summary' to output only test status summary,
# 'errors' to also print test logs for failed tests, 'all' to print logs for all tests and
# 'streamed' to output logs for all tests in real time (this will force tests to be executed locally one at a time regardless of --test_strategy value).
#Tags: test_runner, terminal_output, execution
#--test_summary=<short, terse, detailed, none or testcase> default: "short"
#Specifies the desired format of the test summary. Valid values are 'short' to print information only about tests executed, 'terse', to print information only about unsuccessful tests that were run, 'detailed' to print detailed information about failed test cases, 'testcase' to print summary in test case resolution, do not print detailed information about failed test cases and 'none' to omit the summary.
#Tags: terminal_output

# Setting disk cache directory.
#build --disk_cache=~/.cache/bazel

# CPU setting for target and host machines.
# You should replace 'k8' with the appropriate value for your system.
#build --cpu=k8
#build --host_cpu=k8

# Enable debug outputs for sandboxing.
build --sandbox_debug
#build --copt=-Dredacted='\\\"redacted\\\"'

# Debug test with environment variable for shared libraries.
#test -c dbg --test_env=LD_LIBRARY_PATH=/usr/local/lib

